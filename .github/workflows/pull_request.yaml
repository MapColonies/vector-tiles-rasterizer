name: pull_request

on: [pull_request]

jobs:
  eslint:
    name: Run eslint
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci

      - name: Run linters
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.github_token }}
          # Enable linters
          eslint: true
          prettier: true
          eslint_extensions: ts

      - name: OpenAPI Lint Checks
        uses: nwestfall/openapi-action@v1.0.2
        with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         file: ./openapi3.yaml

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    container: melancholiai/vector-tiles-rasterizer-tests:v0.0.1

    services:
      # Label used to access the service container
      tileserver-gl:
        # Docker Hub image
        image: maptiler/tileserver-gl:v3.1.1
        ports:
          - 80:80

    strategy:
      matrix:
        node: [14.x]

    steps:
      - name: Run Tests
        run: sh /usr/src/app/docker-test.sh

      # - name: Check out Git repository
      #   uses: actions/checkout@v2

      # - name: Set up Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node }}

      # - name: Install Node.js dependencies
      #   run: npm ci

      # - name: Run tests
      #   run: docker build ./tests.Dockerfile

      - uses: actions/upload-artifact@v2
        with:
          name: Test Reporters
          path: reports/**
